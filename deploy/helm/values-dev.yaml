appRole: http

configEnv: dev

configMap:
  NODE_ENV: "development"
  BUILD_ENV: "development"
  SERVER_PORT: "8080"
  REDIS_URL: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#REDIS_URL
  PNO_SERVICE_URL: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#PNO_SERVICE_URL
  REDIS_EXPIRE_TIME: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#REDIS_EXPIRE_TIME
  ALLOWED_ORG_TYPES: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#ALLOWED_ORG_TYPES
  SENTRY_DSN: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#SENTRY_DSN
  GOOGLE_APPLICATION_CREDENTIALS: "/app/.conn-org-lookup-orch.json"
  GCP_PROJECT_ID: vault:secret/data/apps/command/connect-org-lookup-orchestrator/dev#GCP_PROJECT_ID

additionalLabels:
  product: communities
  business_unit: connect
  tags.datadoghq.com/env: dev
  tags.datadoghq.com/version: ${trigger['artifacts'].?[type == 'docker/image' && version != null][0]['version']}
  tags.datadoghq.com/service: org-lookup-orchestrator

customLabels: {}

service:
  type: NodePort
  port: 8080
  targetPort: 8080
  # Additional service ports config
  extraPorts:

hpa:

replicaCount: 3

vault:
  addr: "https://vault.cloud.kw.com/"
  tls: "vault-tls"
  role: "read"

imagePullSecretsAuth: gcr-access-key

container:
  name: connect-org-lookup-orchestrator
  image:
    repository: gcr.io/kw-image-repo/connect-org-lookup-orchestrator
    pullPolicy: Always
  command:
  ports:
    - name: http
      containerPort: 8080
  resources:
    requests:
      cpu: "25m"
  livenessProbe:
    initialDelaySeconds: 3
    periodSeconds: 30
    timeoutSeconds: 5
    httpGet:
      path: /health
      port: 8080
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 30
    timeoutSeconds: 5
    httpGet:
      path: /health
      port: 8080
  env:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: DD_ENV
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/env']
    - name: DD_SERVICE
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/service']
    - name: DD_PRODUCT
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['product']
    - name: DD_VERSION
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['tags.datadoghq.com/version']
    - name: DD_LOGS_INJECTION
      value: "true"
    - name: DD_TAGS
      value: "product:$(DD_PRODUCT),business_unit:connect"
    - name: DD_SERVICE_MAPPING
      value: "http:$(DD_SERVICE),http2:$(DD_SERVICE),fs:$(DD_SERVICE),dns:$(DD_SERVICE),google-cloud-pubsub:$(DD_SERVICE),grpc:$(DD_SERVICE)"
    - name: DD_RUNTIME_METRICS_ENABLED
      value: "true"
    - name: DD_PROFILING_ENABLED
      value: "true"
    - name: DD_APM_IGNORE_RESOURCES
      value: "/health,/ping,/db/health"

extraVolume:
  - name: serviceaccount
    secret:
      secretName: conn-org-lookup-orch

extraVolumeMounts:
  - name: serviceaccount
    mountPath: "/app/.conn-org-lookup-orch.json"
    subPath: ".conn-org-lookup-orch.json"
